From 8f83d8372cbddab854ffc0751ccebaf86927428e Mon Sep 17 00:00:00 2001
From: Alessandro Rubini <rubini@gnudd.com>
Date: Sat, 1 Apr 2023 17:29:09 +0200
Subject: [PATCH 4/5] include/std/inttypes.h: protect definition of int32_t and
 uint32_t

Similarly to what happens in the previous commit, gcc-6 (and later, I
suppose) define int32_t in its own include/std/inttypes.h, which gets
somehow included in the chain.

Again, simple and stupid fix, protect with #ifdef using its own macro name.

Signed-off-by: Alessandro Rubini <rubini@gnudd.com>
---
 include/std/inttypes.h | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/include/std/inttypes.h b/include/std/inttypes.h
index 6deb77e1..15e4127d 100644
--- a/include/std/inttypes.h
+++ b/include/std/inttypes.h
@@ -3,15 +3,24 @@
 
 typedef unsigned char uint8_t;
 typedef unsigned short uint16_t;
+#ifndef _UINT32_T_DECLARED /* lm32-elf/include/sys/_stdint.h may define it */
 typedef unsigned int uint32_t;
+#define _UINT32_T_DECLARED
+#endif
+
 typedef unsigned long long uint64_t;
 
 typedef signed char int8_t;
 typedef signed short int16_t;
+
+#ifndef _INT32_T_DECLARED /* lm32-elf/include/sys/_stdint.h may define it */
 typedef signed int int32_t;
+#define _INT32_T_DECLARED
+#endif
+
 typedef signed long long int64_t;
 
-#ifndef _INTPTR_T_DECLARED /* m32-elf/include/sys/_stdint.h may def it */ 
+#ifndef _INTPTR_T_DECLARED /* lm32-elf/include/sys/_stdint.h may define it */
 typedef unsigned long intptr_t;
 #define _INTPTR_T_DECLARED
 #endif
-- 
2.30.2

